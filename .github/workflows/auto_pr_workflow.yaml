name: Auto Create Pull Request and Lint Check

on:
  push:
    branches:
      - feature/*  # Runs when a branch prefixed with "feature/" is pushed

jobs:
  createPullRequest:
    permissions: write-all
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full commit history

      - name: Get Commit Message
        id: commit_msg
        run: |
          echo "TITLE=$(git log -1 --pretty=%s)" >> $GITHUB_ENV
          echo "BODY=$(git log -1 --pretty=%b)" >> $GITHUB_ENV

      - name: Authenticate with GitHub CLI
        run: gh auth status
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if PR Already Exists
        id: check_pr
        run: |
          PR_EXISTS=$(gh pr list --head "${{ github.ref_name }}" --json number --jq '. | length')
          if [[ "$PR_EXISTS" -gt 0 ]]; then
            echo "PR already exists. Skipping PR creation."
            echo "SKIP_PR=true" >> $GITHUB_ENV
          else
            echo "No existing PR found. Proceeding to create a PR."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        if: env.SKIP_PR != 'true'  # Only run if no PR exists
        run: |
          gh pr create \
            --base main \
            --head ${{ github.ref_name }} \
            --title "${{ env.TITLE }}" \
            --body "${{ env.BODY }}" \
            --label "automated pull request" \
#            --reviewer "your-github-username" \
#            --assignee "your-github-username"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get FVM Config
        id: fvm_config
        uses: zoexx/github-action-json-file-properties@release
        with:
          file_path: ".fvm/fvm_config.json"

      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.fvm_config.outputs.flutterSdkVersion }}
          channel: stable
          cache: true
          architecture: x64

      - name: Inject Dummy Environment File
        uses: "DamianReeves/write-file-action@master"
        with:
          path: lib/environment.dart
          write-mode: overwrite
          contents: |
            // ignore_for_file: constant_identifier_names
            // ignore_for_file: non_constant_identifier_names
            import 'package:firebase_core/firebase_core.dart';
            class Environment {
               FirebaseOptions WEB_ENV = const FirebaseOptions(
                  apiKey: '',
                  appId: '',
                  messagingSenderId: '',
                  projectId: '',
                  authDomain: '',
                  storageBucket: '',
                  measurementId: '',
                );

                FirebaseOptions ADR_ENV = const FirebaseOptions(
                  apiKey: '',
                  appId: '',
                  messagingSenderId: '',
                  projectId: '',
                  authDomain: '',
                  storageBucket: '',
                  measurementId: '',
                );

                FirebaseOptions IOS_ENV = const FirebaseOptions(
                  apiKey: '',
                  appId: '',
                  messagingSenderId: '',
                  projectId: '',
                  authDomain: '',
                  storageBucket: '',
                  measurementId: '',
                );
            }

      - name: Install packages and analyze
        run: |
          flutter pub get
          flutter packages pub run build_runner build --delete-conflicting-outputs --verbose
          flutter analyze > flutter_analyze_report.txt

      - name: Comment PR
        if: ${{ failure() }} || ${{ success() }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: "lints"
          hide_and_recreate: true
          hide_classify: "OUTDATED"
          path: flutter_analyze_report.txt

